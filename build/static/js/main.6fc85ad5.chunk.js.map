{"version":3,"sources":["Item.js","FilterMenu.js","tagConfig.js","CheckList.js","Home.js","Login.js","Edit.js","App.js","serviceWorker.js","index.js"],"names":["Item","name","this","checked","tags","dairy","vegetable","fruit","meat","sweet","fiber","other","FilterMenu","setFilter","toggleFilterMenu","setToggleFilterMenu","className","style","display","Paper","elevation","icon","faTimes","onClick","RadioGroup","List","ListItem","Radio","value","onChange","event","currentTarget","Object","entries","map","index","tag","key","tagConfig","faCheese","faCarrot","faAppleAlt","faDrumstickBite","faCookie","faBreadSlice","faQuestion","CheckList","list","filter","user","history","useHistory","keys","Checkbox","firebase","database","ref","uid","set","ListItemText","textDecoration","primary","secondary","opacity","ListItemIcon","push","faEllipsisV","Home","useState","AppBar","position","Toolbar","Button","startIcon","faFilter","color","auth","signOut","Fab","aria-label","Add","Login","email","setEmail","password","setPassword","error","setError","useEffect","FormControl","FormGroup","TextField","label","variant","e","target","type","signInWithEmailAndPassword","catch","err","message","createUserWithEmailAndPassword","Edit","params","item","setName","setTags","Divider","FormControlLabel","control","newTags","disabled","console","log","goBack","remove","initializeApp","firebaseConfig","analytics","App","setUser","setList","onAuthStateChanged","on","snapshot","val","exact","path","component","match","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6fc85ad5.chunk.js","sourcesContent":["export default class Item {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.checked = false;\r\n        this.tags = {\r\n            dairy: false,\r\n            vegetable: false,\r\n            fruit: false,\r\n            meat: false,\r\n            sweet: false,\r\n            fiber: false,\r\n            other: false\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { List, ListItem, Paper, Radio, RadioGroup } from '@material-ui/core';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport Item from './Item';\r\nimport './FilterMenu.scss';\r\n\r\nfunction FilterMenu({ setFilter, toggleFilterMenu, setToggleFilterMenu }) {\r\n    return (\r\n        <div className=\"FilterMenu\" style={{ display: `${toggleFilterMenu ? 'initial' : 'none'}` }}>\r\n            <Paper elevation={5}>\r\n                <FontAwesomeIcon icon={faTimes} onClick={() => setToggleFilterMenu(!toggleFilterMenu)} />\r\n                <RadioGroup>\r\n                    <List>\r\n                        <ListItem>\r\n                            All\r\n                            <Radio value=\"\" onChange={(event) => {\r\n                                setFilter(event.currentTarget.value);\r\n                            }} />\r\n                        </ListItem>\r\n                        {\r\n                            Object.entries(new Item().tags).map(([tag], index) => {\r\n                                return (\r\n                                    <ListItem key={index}>\r\n                                        {tag}\r\n                                        <Radio value={tag} onChange={(event) => {\r\n                                            setFilter(event.currentTarget.value);\r\n                                        }} />\r\n                                    </ListItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List>\r\n                </RadioGroup>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilterMenu;","import { faCheese, faCarrot, faAppleAlt, faDrumstickBite, faCookie, faBreadSlice, faQuestion } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst tagConfig = {\r\n    dairy: faCheese,\r\n    vegetable: faCarrot,\r\n    fruit: faAppleAlt,\r\n    meat: faDrumstickBite,\r\n    sweet: faCookie,\r\n    fiber: faBreadSlice,\r\n    other: faQuestion\r\n}\r\n\r\nexport default tagConfig;","import React from 'react';\r\nimport { List, ListItemText, ListItem, ListItemIcon, Checkbox } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport firebase from 'firebase/app';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport tagConfig from './tagConfig';\r\nimport './CheckList.scss';\r\n\r\nfunction CheckList({ list, filter, user }) {\r\n    const history = useHistory();\r\n    return (\r\n        <List className=\"CheckList\">\r\n            {\r\n                Object.keys(list).filter((key) => {\r\n                    const { tags } = list[key];\r\n                    return filter ? tags[filter] : true;\r\n                }).map((key, index) => {\r\n                    const { name, checked, tags } = list[key];\r\n                    return (\r\n                        <ListItem key={index}>\r\n                            <Checkbox checked={checked} onChange={() => {\r\n                                firebase.database().ref(`${user.uid}/${key}/checked`).set(!checked);\r\n                            }} />\r\n                            <ListItemText style={{ textDecoration: `${checked ? 'line-through' : 'none'}` }} primary={name} secondary={\r\n                                <span>\r\n                                    {\r\n                                        Object.entries(tags).map(([tag, checked], index) => {\r\n                                            return (\r\n                                                <FontAwesomeIcon key={index} icon={tagConfig[tag]} style={{ opacity: `${checked ? 1 : 0.4}` }} />\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </span>\r\n                            } />\r\n                            <ListItemIcon onClick={() => history.push(`/edit/${key}`)}>\r\n                                <FontAwesomeIcon icon={faEllipsisV} />\r\n                            </ListItemIcon>\r\n                        </ListItem>\r\n                    )\r\n\r\n                })\r\n            }\r\n        </List>\r\n    )\r\n};\r\n\r\nexport default CheckList;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport FilterMenu from './FilterMenu';\r\nimport CheckList from './CheckList';\r\n\r\nimport firebase from 'firebase/app';\r\n\r\nimport { AppBar, Button, Toolbar, Fab } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Home.scss';\r\n\r\nfunction Home({ list, user }) {\r\n  const [filter, setFilter] = useState(\"\")\r\n  const [toggleFilterMenu, setToggleFilterMenu] = useState(false);\r\n\r\n  const history = useHistory();\r\n  if (!user) {\r\n    history.push('/');\r\n  }\r\n\r\n  const signOut = () => firebase\r\n    .auth()\r\n    .signOut();\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Button startIcon={<FontAwesomeIcon icon={faFilter} />} onClick={() => setToggleFilterMenu(!toggleFilterMenu)}>filter</Button>\r\n          <Button color=\"inherit\" onClick={signOut}>Sign Out</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <CheckList list={list} filter={filter} user={user} />\r\n\r\n      <Fab color=\"primary\" aria-label=\"add\" onClick={() => history.push('/edit/0')}>\r\n        <Add />\r\n      </Fab>\r\n\r\n      <FilterMenu filter={filter} setFilter={setFilter} toggleFilterMenu={toggleFilterMenu} setToggleFilterMenu={setToggleFilterMenu} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nimport { Button, TextField, FormControl, FormGroup } from '@material-ui/core';\r\n\r\nimport './Login.scss';\r\n\r\nfunction Login({ user }) {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push('/home');\r\n    }\r\n  }, [user, history]);\r\n\r\n  const signIn = () => firebase.auth().signInWithEmailAndPassword(email, password).catch(err => setError(err.message));\r\n  const createAccount = () => firebase.auth().createUserWithEmailAndPassword(email, password).catch(err => setError(err.message));\r\n  return (\r\n    <div className=\"Login\">\r\n      <FormControl>\r\n        <h1>PANTRY</h1>\r\n        <FormGroup>\r\n          <div>\r\n            <TextField label=\"Email\" variant=\"outlined\" color=\"primary\" value={email} onChange={e => setEmail(e.target.value)} />\r\n            <TextField label=\"Password\" variant=\"outlined\" color=\"primary\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n          </div>\r\n          <span>{error}</span>\r\n          <div>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={signIn}>Sign In</Button>\r\n            <br />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={createAccount}>Create Account</Button>\r\n          </div>\r\n        </FormGroup>\r\n        <footer>PANTRY | Developed by @claytoncook</footer>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport firebase from 'firebase/app';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { TextField, Checkbox, Button, FormControl, FormGroup, FormControlLabel, Divider, AppBar, Toolbar } from '@material-ui/core';\r\n\r\nimport tagConfig from './tagConfig';\r\nimport Item from './Item';\r\nimport './Edit.scss';\r\n\r\nfunction Edit({ params, user, list }) {\r\n    const history = useHistory();\r\n    if (!user) {\r\n        history.push('/');\r\n    }\r\n    let { key } = params;\r\n\r\n    const [item, setItem] = useState(list[key] || new Item(''));\r\n\r\n    const [name, setName] = useState(item?.name);\r\n    const [tags, setTags] = useState(item?.tags);\r\n\r\n    const signOut = () => firebase\r\n        .auth()\r\n        .signOut();\r\n\r\n    return (\r\n        <div className=\"Edit\">\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <h3>Add Item</h3>\r\n                    <Button color=\"inherit\" onClick={signOut}>Sign Out</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <FormControl>\r\n                <FormGroup>\r\n                    <TextField variant=\"outlined\" label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                    <Divider />\r\n                    {\r\n                        Object.entries(tags).map(([tag, checked], index) => {\r\n                            return (\r\n                                <FormControlLabel key={index}\r\n                                    control={<Checkbox checked={checked} onChange={() => {\r\n                                        let newTags = { ...tags };\r\n                                        newTags[tag] = !checked;\r\n                                        setTags(newTags);\r\n                                    }} />}\r\n                                    label={<span><span>{tag}</span><FontAwesomeIcon icon={tagConfig[tag]} style={{ opacity: `${checked ? 1 : 0.4}` }} /></span>}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                    <Divider />\r\n                    <div>\r\n                        <Button disabled={!name} variant=\"contained\" color=\"primary\" type=\"submit\" onClick={() => {\r\n                            if (list[key]) {\r\n                                console.log('Update')\r\n                                firebase.database().ref(`${user.uid}/${key}`).set({ name, checked: false, tags });\r\n                            } else {\r\n                                console.log('Add')\r\n                                firebase.database().ref(`${user.uid}/`).push({ name, checked: false, tags });\r\n                            }\r\n                            history.goBack();\r\n                        }}>{list[key] ? 'Update' : 'Add'}</Button>\r\n                        <br />\r\n                        <Button disabled={!item.name} variant=\"contained\" color=\"primary\" type=\"submit\" onClick={() => {\r\n                            firebase.database().ref(`${user.uid}/${key}`).remove();\r\n                            history.goBack();\r\n                        }}>Delete</Button>\r\n                        <br />\r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={() => {\r\n                            history.goBack();\r\n                        }}>Cancel</Button>\r\n                    </div>\r\n                </FormGroup>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Edit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport Edit from './Edit';\r\n\r\nimport firebaseConfig from './firebaseConfig.json';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport 'firebase/analytics';\r\n\r\nimport './App.scss';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [list, setList] = useState({});\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      setUser(user);\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(user) {\r\n      firebase.database().ref(user.uid).on('value', (snapshot) => {\r\n        const value = snapshot.val();\r\n        setList(value || {});\r\n      })\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Login user={user} />\r\n          </Route>\r\n          <Route exact path=\"/home\">\r\n            <Home list={list} user={user} />\r\n          </Route>\r\n          <Route exact path='/edit/:key' component={({ match }) => <Edit params={match.params} user={user} list={list}/>}/>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}